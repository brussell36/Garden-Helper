{"version":3,"sources":["components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Account/SignOut.js","components/Session/context.js","components/Session/withAuthorization.js","components/Session/index.js","components/NavBar.js","components/LandingPage/Header.js","components/LandingPage/Features.js","components/LandingPage/About.js","components/LandingPage/Footer.js","components/LandingPage/ImageCarousel.js","components/LandingPage/LandingPage.js","components/Account/SignUp.js","components/Account/LogIn.js","components/Account/AccountControl.js","components/Account/PasswordForgot.js","components/Account/PasswordChange.js","components/Account/Profile.js","components/AddPlant.js","components/Plant.js","components/NewPlantForm.js","components/App.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","REACT_APP_FIREBASE_SENDER_ID","appId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","app","initializeApp","this","fieldValue","firestore","FieldValue","db","history","useHistory","Button","type","variant","onClick","push","AuthUserContext","withAuthorization","condition","listener","onAuthStateChanged","authUser","compose","withRouter","withAuthContext","userName","Nav","Link","className","href","displayName","accountLink","Navbar","style","backgroundColor","boxShadow","sticky","expand","Brand","Toggle","aria-controls","Collapse","id","Header","Container","Features","Fragment","Row","Col","icon","faSun","size","faTint","faSeedling","About","Image","src","Footer","ImageCarousel","Carousel","controls","Item","LandingPage","useState","username","setUsername","setEmail","password1","setPassword1","password2","setPassword2","error","setError","isInvalid","Form","onSubmit","event","preventDefault","then","result","user","updateProfile","catch","Group","controlid","Control","placeholder","value","onChange","target","controlId","disabled","message","logEmail","setLogEmail","logPassword","setLogPassword","AccountControl","CardDeck","Card","Title","as","Body","plant","setUser","useEffect","collection","doc","idPlant","set","key","commonName","latinName","imgUrl","sun","water","soil","description","Plant","favoriteButton","Img","Subtitle","Text","reducer","state","action","newPlants","plants","useReducer","dispatch","display","setDisplay","get","querySnapshot","docs","map","data","sunValue","waterValue","soilValue","filteredResult","filter","console","log","sunResult","CardColumns","comonName","waterResult","soilResult","Label","name","setAuthUser","Provider","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dbc76b52.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n  <FirebaseContext.Consumer>\r\n    {firebase => <Component {...props} firebase={firebase} />}\r\n  </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;","import 'firebase/auth';\r\nimport app from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID \r\n}\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(firebaseConfig);\r\n    this.fieldValue = app.firestore.FieldValue;\r\n    this.auth = app.auth();\r\n    this.db = app.firestore()\r\n  }\r\n  \r\n  doCreateUserWithEmailAndPassword = (email, password) => \r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) => \r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n  doPasswordUpdate = password => \r\n    this.auth.currentUser.updatePassword(password);\r\n}\r\n\r\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext, withFirebase };","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { withFirebase } from './../Firebase';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction SignOut(props) {\r\n  const history = useHistory();\r\n\r\n  const onClick = () => {\r\n    props.firebase.doSignOut();\r\n    history.push('/');\r\n  }\r\n\r\n  return (\r\n    <Button type='button' variant='alert' onClick={onClick}>Log Out</Button>\r\n  )\r\n}\r\n\r\nexport default withFirebase(SignOut);","import React from 'react';\r\n\r\nconst AuthUserContext = React.createContext(null);\r\n\r\nexport const withAuthContext = Component => props => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser => <Component {...props} authUser={authUser} />}\r\n  </AuthUserContext.Consumer>\r\n)\r\n\r\nexport default AuthUserContext;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst withAuthorization = condition => Component => {\r\n  class withAuthorization extends React.Component {\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n        authUser => {\r\n          if(!condition(authUser)) {\r\n            this.props.history.push('/account');\r\n          }\r\n        }\r\n      )\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return(\r\n        <Component {...this.props} />\r\n      );\r\n    }\r\n  }\r\n\r\n  return compose(\r\n    withRouter,\r\n    withFirebase,\r\n  )(withAuthorization);\r\n};\r\n\r\nexport default withAuthorization;","import AuthUserContext, { withAuthContext } from './context';\r\nimport withAuthorization from './withAuthorization';\r\n\r\nexport default AuthUserContext;\r\n\r\nexport { withAuthContext, withAuthorization };","import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport SignOut from './Account/SignOut';\r\nimport { withAuthContext } from './Session/index';\r\n\r\nfunction NavBar(props) {\r\n  const {authUser} = props;\r\n\r\n  const userName = authUser ? <Nav.Link className='mr-auto' href='/profile'>{authUser.displayName}</Nav.Link> : null;\r\n  const accountLink = authUser ? <Nav className='mr-auto'><SignOut /></Nav> : <Nav.Link href='/account' className='mr-auto'>Log In</Nav.Link>;\r\n  // const profilePage = authUser ? <Nav.Link className='mr-auto' href='/profile'>Your Profile</Nav.Link> : null;\r\n\r\n  return (\r\n    <Navbar style={{ backgroundColor: \"#7ea04d\", boxShadow: \"0 5px 15px rgba(0, 0, 0, .5)\",}} sticky=\"top\" expand=\"lg\">\r\n      <Navbar.Brand href=\"/\">Garden Helper</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href='/search-plants'>Search Plants</Nav.Link>\r\n        </Nav>\r\n        <Nav>\r\n          {userName}\r\n          {accountLink}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default withAuthContext(NavBar);","import React from 'react';\r\nimport './../css/Header.css';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nfunction Header() {\r\n  return(\r\n      <div className='title-section'>\r\n        <Container className='title-container'>\r\n          <title>Garden Helper</title>\r\n          <h1 className='title'>Garden Helper</h1>\r\n          <h3 className='under-title'>Find new and interesting plants to fit your garden.</h3>\r\n        </Container>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSun } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTint } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSeedling } from '@fortawesome/free-solid-svg-icons';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport './../css/Features.css';\r\n\r\nfunction Features() {\r\n  return(\r\n    <React.Fragment>\r\n      <div className='features-section'>\r\n        <Container>\r\n          <Row>\r\n            <Col className='col-lg-4'>\r\n              <FontAwesomeIcon className='features-icon' icon={faSun} size='5x' />\r\n              <h4>Choose how much sun.</h4>\r\n              <p>Search plants by shade tolerant, part sun, or full sun.</p>\r\n            </Col>\r\n            <Col className='col-lg-4'>\r\n              <FontAwesomeIcon className='features-icon' icon={faTint} size='5x' />\r\n              <h4>Choose how much water.</h4>\r\n              <p>Search based on drought tolerance, needing a little water, or watering often.</p>\r\n            </Col>\r\n            <Col className='col-lg-4'>\r\n              <FontAwesomeIcon className='features-icon' icon={faSeedling} size='5x' />\r\n              <h4>Choose your type of soil.</h4>\r\n              <p>Do you have clay-like soil, or do you have a more rocky well-drained type?</p>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Features;","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\n\r\nfunction About() {\r\n  return(\r\n    <div className='about-section'>\r\n      <Container className='about-container'>\r\n        <h1 className='about-h1'>About This Site</h1>\r\n        <Row>\r\n          <Col className='col-md-6 about-col'>\r\n            <p className='about-text'>This site was designed to help people new to gardening figure out what kind of plants would be ideal for their climate and gardening ability. When the user selects the amount of sun their yard receives, how much water they get or how much they like to water, and what their soil is like, they will get back a list of plants that should match their criteria.</p>\r\n          </Col>\r\n          <Col className='col-md-6 about-col'>\r\n            <Image className='about-img' src='https://images-na.ssl-images-amazon.com/images/I/918HS-mKyzL._AC_SL1500_.jpg' />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport './../css/Footer.css';\r\n\r\nfunction Footer() {\r\n  return(\r\n    <div className='footer'>\r\n      <p>© Copyright 2020 Garden Helper</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\nfunction ImageCarousel() {\r\n  return(\r\n    <div className='carousel-section'>\r\n      <h1 className='carousel-title'>So Many Plants!</h1>\r\n      <Carousel className='carousel-container' controls={false}>\r\n        <Carousel.Item>\r\n          <Image className='carousel-img' src='https://www.gardeningknowhow.com/wp-content/uploads/2009/08/fuchsia-1.jpg' />\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <Image className='carousel-img' src='https://www.gilmour.com/wp-content/uploads/2018/03/hydrangea-care.jpg' />\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <Image className='carousel-img' src='https://gardenerspath.com/wp-content/uploads/2020/01/Purple-Hellebores-in-the-Garden.jpg' />\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <Image className='carousel-img' src='https://img.sunset02.com/sites/default/files/styles/marquee_large_2x/public/image/2016/10/main/rosmarinus-officinalis-tuscan-blue.jpg' />\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <Image className='carousel-img' src='https://cdn.britannica.com/31/137431-050-6470C3A9/spirea-flower-Japanese-plant-shrub-much-Canada.jpg' />\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <Image className='carousel-img' src='https://www.gardeningknowhow.com/wp-content/uploads/2013/07/sedum.jpg' />\r\n        </Carousel.Item>\r\n      </Carousel>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageCarousel;","import React from 'react';\r\nimport Header from './Header';\r\nimport Features from './Features';\r\nimport About from './About';\r\nimport Footer from './Footer';\r\nimport ImageCarousel from './ImageCarousel';\r\n\r\nfunction LandingPage() {\r\n  return(\r\n    <>\r\n      <Header />\r\n      <Features />\r\n      <About />\r\n      <ImageCarousel />\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LandingPage;","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { withFirebase } from '../Firebase';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction SignUp(props) {\r\n  const history = useHistory();\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password1, setPassword1] = useState('');\r\n  const [password2, setPassword2] = useState('');\r\n  const [error, setError] = useState(null);\r\n\r\n  const isInvalid = password1 !== password2 || password1 === '' || email === '' || username === '';\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, password1)\r\n      .then(result => result.user.updateProfile({displayName: username}))\r\n      .then(() => {\r\n        setUsername('');\r\n        setEmail('');\r\n        setPassword1('');\r\n        setPassword2('');\r\n        setError(null);\r\n        history.push(\"/\");\r\n      })\r\n      .catch(error => setError(error));\r\n  }\r\n\r\n  return (\r\n      <Form onSubmit={onSubmit}>\r\n        <Form.Group controlid='signupUsername'>\r\n          <Form.Control \r\n            type='text' \r\n            placeholder='User Name'\r\n            value={username}\r\n            onChange={event => setUsername(event.target.value) } />\r\n        </Form.Group>\r\n        <Form.Group controlId='signupEmail'>\r\n          <Form.Control \r\n            type='text' \r\n            placeholder='Email'\r\n            value={email}\r\n            onChange={event => setEmail(event.target.value)} />\r\n        </Form.Group>\r\n        <Form.Group controlId='signupPassword'>\r\n          <Form.Control \r\n            type='password' \r\n            placeholder='Password'\r\n            value={password1}\r\n            onChange={event => setPassword1(event.target.value)} />\r\n        </Form.Group>\r\n        <Form.Group controlId='signupPassword2'>\r\n          <Form.Control \r\n            type='password' \r\n            placeholder='Confirm Password'\r\n            value={password2}\r\n            onChange={event => setPassword2(event.target.value)} />\r\n        </Form.Group>\r\n        <Button type='submit' variant='primary' disabled={isInvalid}>Sign Up</Button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </Form>\r\n  );\r\n}\r\n\r\nexport default withFirebase(SignUp);","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { withFirebase } from '../Firebase';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport './../css/Account.css';\r\n\r\nfunction LogIn(props) {\r\n  const history = useHistory();\r\n  const [logEmail, setLogEmail] = useState('');\r\n  const [logPassword, setLogPassword] = useState('');\r\n  const [error, setError] = useState(null);\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    props.firebase\r\n      .doSignInWithEmailAndPassword(logEmail, logPassword)\r\n      .then(() => {\r\n        setLogEmail('');\r\n        setLogPassword('');\r\n        setError(null);\r\n        history.push('/');\r\n      })\r\n      .catch(error => { setError(error)});\r\n  }\r\n\r\n  const isInvalid = logPassword === '' || logEmail === '';\r\n\r\n  return (\r\n    <Container>\r\n      <Form onSubmit={onSubmit}>\r\n        <Form.Group controlId=\"logEmail\">\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Email Address'\r\n            value={logEmail}\r\n            onChange={event=>setLogEmail(event.target.value)} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"logPassword\">\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Password'\r\n            value={logPassword}\r\n            onChange={event=>setLogPassword(event.target.value)} />\r\n        </Form.Group>\r\n        <Button type='submit' variant='secondary' disabled={isInvalid}>Log In</Button>\r\n        {error && error.message}\r\n      </Form>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default withFirebase(LogIn);","import React from 'react';\r\nimport SignUp from './SignUp';\r\nimport LogIn from './LogIn';\r\nimport Card from 'react-bootstrap/Card';\r\nimport CardDeck from 'react-bootstrap/CardDeck';\r\n\r\nfunction AccountControl() {\r\n  return (\r\n    <React.Fragment>\r\n      <CardDeck>\r\n        <Card>\r\n          <Card.Header><Card.Title as='h4'>Create Account</Card.Title></Card.Header>\r\n          <Card.Body><SignUp /></Card.Body>\r\n        </Card>\r\n        <Card>\r\n          <Card.Header><Card.Title as='h4'>Log In To Your Account</Card.Title></Card.Header>\r\n          <Card.Body>\r\n            <LogIn />\r\n            <a href='/forgot-password'>I forgot my password!</a>\r\n          </Card.Body>\r\n        </Card>\r\n      </CardDeck>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default AccountControl;","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { withFirebase } from '../Firebase';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport '../css/Account.css';\r\n\r\nfunction PasswordForgot(props) {\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState('');\r\n  const [error, setError] = useState(null);\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    props.firebase.doPasswordReset(email)\r\n      .then(() => {\r\n        setEmail('');\r\n        setError(null);\r\n        history.push('/account');\r\n      })\r\n      .catch(error => setError(error));\r\n  }\r\n\r\n  return(\r\n    <Container className='login-container'>\r\n      <Form onSubmit={onSubmit}>\r\n        <Form.Group>\r\n          <h1>Reset your Password</h1>\r\n          <Form.Control\r\n            type='text'\r\n            onChange={event => setEmail(event.target.value)}\r\n            value={email}\r\n            placeholder='Email Address' />\r\n        </Form.Group>\r\n        <Button type='submit' variant='primary'>Reset My Password</Button>\r\n        {error && <p>{error.message}</p>}\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default withFirebase(PasswordForgot);","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { withFirebase } from './../Firebase';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nfunction PasswordChange(props) {\r\n  const history = useHistory();\r\n  const [password1, setPassword1] = useState('');\r\n  const [password2, setPassword2] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const isInvalid = password1 !== password2 || password1 === '';\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    props.withFirebase\r\n      .doPasswordUpdate(password1)\r\n      .then(() => {\r\n        setPassword1('');\r\n        setPassword2('');\r\n        history.push('/');\r\n      })\r\n      .catch(error => setError(error));\r\n  }\r\n\r\n  return(\r\n    <Container className='login-container'>\r\n      <h2>Change your Password</h2>\r\n      <Form onSubmit={onSubmit}>\r\n        <Form.Group controlId='password1'>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='New Password'\r\n            value={password1}\r\n            onChange={event=>setPassword1(event.target.value)} />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm Password'\r\n            value={password2}\r\n            onChange={event=>setPassword2(event.target.value)} />\r\n        </Form.Group>\r\n        <Button type='submit' variant='dark' disabled={isInvalid}>Update Password</Button>\r\n        {error && error.message}\r\n      </Form>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default withFirebase(PasswordChange);","import React from 'react';\r\nimport PasswordChange from './PasswordChange';\r\nimport withAuthorization from './../Session/withAuthorization';\r\n\r\nfunction Profile() {\r\n  return(\r\n    <PasswordChange />\r\n  )\r\n}\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default withAuthorization(condition)(Profile);","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withFirebase } from './Firebase';\r\nimport withAuthorization from './Session/withAuthorization';\r\nimport { compose } from 'recompose';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction AddPlant(props) {\r\n  const { db } = props.firebase;\r\n  const { plant } = props;\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => props.firebase.auth.onAuthStateChanged(function(user){\r\n    if (user) {\r\n      setUser(user);\r\n    } else {\r\n      setUser(null);\r\n    }\r\n  }), [props.firebase.auth]);\r\n\r\n  const addPlant = () => {\r\n    db.collection(user.email).doc(plant.idPlant).set({\r\n      key: plant.idPlant,\r\n      commonName: plant.commonName,\r\n      latinName: plant.latinName,\r\n      imgUrl: plant.imgUrl,\r\n      sun: plant.sun,\r\n      water: plant.water,\r\n      soil: plant.soil,\r\n      description: plant.description\r\n    })\r\n  }\r\n\r\n  return(\r\n    <Button variant='primary' type='button' onClick={addPlant}>Favorite</Button>\r\n  )\r\n}\r\n\r\nAddPlant.propTypes = {\r\n  plant: PropTypes.object\r\n}\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default compose(\r\n  withFirebase,\r\n  withAuthorization(condition)\r\n)(AddPlant);","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport PropTypes from 'prop-types';\r\nimport AddPlant from './AddPlant';\r\n\r\nfunction Plant(props) {\r\n\r\n  const favoriteButton = <AddPlant plant={props.plant} />;\r\n\r\n  return(\r\n    <>\r\n      <Card>\r\n        <Card.Img variant='top'src={props.imgUrl} />\r\n        <Card.Body>\r\n          <Card.Title>{props.commonName}</Card.Title>\r\n          <Card.Subtitle>{props.latinName}</Card.Subtitle>\r\n          <Card.Text>Sun: {props.sun}</Card.Text>\r\n          <Card.Text>Water: {props.water}</Card.Text>\r\n          <Card.Text>Soil: {props.soil}</Card.Text> \r\n          <Card.Text>Description: {props.description}</Card.Text>\r\n        {favoriteButton}\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nPlant.propTypes = {\r\n  imgUrl: PropTypes.string,\r\n  commonName: PropTypes.string,\r\n  latinName: PropTypes.string,\r\n  sun: PropTypes.string,\r\n  water: PropTypes.string,\r\n  soil: PropTypes.string,\r\n  description: PropTypes.string,\r\n  plant: PropTypes.object\r\n}\r\n\r\nexport default Plant;","import React, { useReducer, useEffect, useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport { withFirebase } from './Firebase';\r\nimport Plant from './Plant';\r\n\r\nconst reducer = (state, action) => {\r\n  switch(action.type) {\r\n    case 'add_plant':\r\n      const newPlants = [...state.plants, action.plant];\r\n      return {...state, plants: newPlants};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction NewPlantForm(props) {\r\n  const [state, dispatch] = useReducer(reducer, {plants: []});\r\n  const [display, setDisplay] = useState(null);\r\n\r\n  useEffect(() => {\r\n    props.firebase.db.collection('plants').get()\r\n      .then(querySnapshot => {\r\n        const plants = querySnapshot.docs.map(doc => doc.data());\r\n        plants.map(plant => dispatch({type: 'add_plant', plant}));\r\n      })\r\n  }, [props.firebase.db])\r\n\r\n  function onSubmitForm(event) {\r\n    event.preventDefault();\r\n    const sunValue = event.target.sun.value;\r\n    const waterValue = event.target.water.value;\r\n    const soilValue = event.target.soil.value;\r\n\r\n    const filteredResult = state.plants.filter(\r\n      plant => {\r\n        console.log(plant.sun);\r\n        console.log(\"Sun filter value: \", sunValue);\r\n        return plant.sun === sunValue || plant.water === waterValue || plant.soil === soilValue;\r\n      }\r\n    );\r\n\r\n    console.log(\"Filtered result: \", filteredResult);\r\n\r\n    if(sunValue && waterValue && soilValue) {\r\n      const sunResult = state.plants.filter(plant => plant.sun === sunValue && plant.water === waterValue && plant.soil === soilValue);\r\n      console.log(sunResult);\r\n      setDisplay(<CardColumns>\r\n        {sunResult.map((plant) => {\r\n          return(\r\n            <Plant\r\n              plant={plant}\r\n              comonName={plant.commonName}\r\n              latinName={plant.latinName}\r\n              imgUrl={plant.imgUrl}\r\n              sun={plant.sun}\r\n              water={plant.water}\r\n              soil={plant.soil}\r\n              description={plant.description}\r\n              key={plant.idPlant} />\r\n          )\r\n          })}\r\n      </CardColumns>)\r\n    } else if(sunValue && waterValue) {\r\n      const sunResult = state.plants.filter(plant => plant.sun === sunValue && plant.water === waterValue);\r\n      setDisplay(<CardColumns>\r\n        {sunResult.map((plant) => {\r\n          return(\r\n            <Plant\r\n              plant={plant}\r\n              commonName={plant.commonName}\r\n              latinName={plant.latinName}\r\n              imgUrl={plant.imgUrl}\r\n              sun={plant.sun}\r\n              water={plant.water}\r\n              soil={plant.soil}\r\n              description={plant.description}\r\n              key={plant.idPlant} />\r\n          )\r\n          })}\r\n      </CardColumns>)\r\n    } else if(waterValue && soilValue) {\r\n      const waterResult = state.plants.filter(plant => plant.water === waterValue && plant.soil === soilValue);\r\n      setDisplay(<CardColumns>\r\n        {waterResult.map((plant) => {\r\n          return(\r\n            <Plant\r\n              plant={plant}\r\n              commonName={plant.commonName}\r\n              latinName={plant.latinName}\r\n              imgUrl={plant.imgUrl}\r\n              sun={plant.sun}\r\n              water={plant.water}\r\n              soil={plant.soil}\r\n              description={plant.description}\r\n              key={plant.idPlant} />\r\n          )\r\n          })}\r\n      </CardColumns>)\r\n    } else if (sunValue) {\r\n      const sunResult = state.plants.filter(plant => plant.sun === sunValue);\r\n      setDisplay(<CardColumns>\r\n        {sunResult.map((plant) => {\r\n          return(\r\n            <Plant\r\n              plant={plant}\r\n              commonName={plant.commonName}\r\n              latinName={plant.latinName}\r\n              imgUrl={plant.imgUrl}\r\n              sun={plant.sun}\r\n              water={plant.water}\r\n              soil={plant.soil}\r\n              description={plant.description}\r\n              key={plant.idPlant} />\r\n          )\r\n          })}\r\n      </CardColumns>)\r\n    } else if (waterValue) {\r\n      const waterResult = state.plants.filter(plant => plant.water === waterValue);\r\n      setDisplay(<CardColumns>\r\n        {waterResult.map((plant) => {\r\n          return(\r\n            <Plant\r\n              plant={plant}\r\n              commonName={plant.commonName}\r\n              latinName={plant.latinName}\r\n              imgUrl={plant.imgUrl}\r\n              sun={plant.sun}\r\n              water={plant.water}\r\n              soil={plant.soil}\r\n              description={plant.description}\r\n              key={plant.idPlant} />\r\n          )\r\n          })}\r\n      </CardColumns>)\r\n    } else if (soilValue) {\r\n      const soilResult = state.plants.filter(plant => plant.soil === soilValue);\r\n      setDisplay(<CardColumns>\r\n        {soilResult.map((plant) => {\r\n          return(\r\n            <Plant\r\n              plant={plant}\r\n              commonName={plant.commonName}\r\n              latinName={plant.latinName}\r\n              imgUrl={plant.imgUrl}\r\n              sun={plant.sun}\r\n              water={plant.water}\r\n              soil={plant.soil}\r\n              description={plant.description}\r\n              key={plant.idPlant} />\r\n          )\r\n          })}\r\n      </CardColumns>)\r\n    } else {\r\n      setDisplay(<CardColumns>\r\n        {state.plants.map((plant) => {\r\n          return(\r\n            <Plant\r\n              plant={plant}\r\n              commonName={plant.commonName}\r\n              latinName={plant.latinName}\r\n              imgUrl={plant.imgUrl}\r\n              sun={plant.sun}\r\n              water={plant.water}\r\n              soil={plant.soil}\r\n              description={plant.description}\r\n              key={plant.idPlant} />\r\n          )\r\n        })}\r\n      </CardColumns>)\r\n    }\r\n  }\r\n\r\n  return(\r\n    <Container className='login-container'>\r\n      <h1>Plant List</h1>\r\n      <Form onSubmit={onSubmitForm}>\r\n        <Form.Group controlId='sun'>\r\n          <Form.Label>Choose Sun</Form.Label>\r\n          <Form.Control as='select' name='sun'>\r\n            <option></option>\r\n            <option>Full-sun</option>\r\n            <option>Part-sun</option>\r\n            <option>Shade</option>\r\n          </Form.Control> \r\n        </Form.Group>\r\n        <Form.Group controlId='water'>\r\n          <Form.Label>Choose Water</Form.Label>\r\n          <Form.Control as='select' name='water'>\r\n            <option></option>\r\n            <option>Low</option>\r\n            <option>Medium</option>\r\n            <option>High</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='soil'>\r\n          <Form.Label>Choose Soil</Form.Label>\r\n          <Form.Control as='select' name='soil'>\r\n            <option></option>\r\n            <option>Well-drained</option>\r\n            <option>Loam</option>\r\n            <option>Clay</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Button type='submit' variant='success'>Get Plants!</Button>\r\n      </Form>\r\n      <hr />\r\n      {display}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default withFirebase(NewPlantForm);","import React, { useState } from 'react';\nimport { withFirebase } from './Firebase';\nimport './../App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport LandingPage from './LandingPage/LandingPage';\nimport AccountControl from './Account/AccountControl';\nimport PasswordForgot from './Account/PasswordForgot';\nimport Profile from './Account/Profile';\nimport NewPlantForm from './NewPlantForm';\nimport AuthUserContext from './Session';\n\nfunction App(props) {\n  const [authUser, setAuthUser] = useState(null);\n\n  props.firebase.auth.onAuthStateChanged(function(user) {\n    if(user) {\n      setAuthUser(user);\n    } else {\n      setAuthUser(null);\n    }\n  })\n\n  return (\n    <AuthUserContext.Provider value={authUser}>\n      <Router>\n        <NavBar />\n        <Switch>\n          <Route path='/'>\n            <LandingPage />\n          </Route>\n          <Route path='/account'>\n            <AccountControl />\n          </Route>\n          <Route path='/forgot-password'>\n            <PasswordForgot />\n          </Route>\n          <Route path='/profile'>\n            <Profile />\n          </Route>\n          <Route path='/search-plants'>\n            <NewPlantForm />\n          </Route>\n        </Switch>\n      </Router>\n    </AuthUserContext.Provider>\n  );\n}\n\nexport default withFirebase(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, {FirebaseContext } from './components/Firebase';\n\nconst firebase = new Firebase();\n\nReactDOM.render(\n  <FirebaseContext.Provider value={firebase}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}